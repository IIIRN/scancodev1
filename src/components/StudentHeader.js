'use client';

import Link from 'next/link';
import { usePathname } from 'next/navigation';
import useLiff from '../hooks/useLiff';
import Image from 'next/image';

// --- Main Header Component ---
export default function StudentHeader() {
  // üëá 1. ‡∏ô‡∏≥ state ‡πÅ‡∏•‡∏∞‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Å‡∏±‡∏ö Modal ‡∏≠‡∏≠‡∏Å
  const { liffProfile, studentDbProfile, isLoading } = useLiff();
  const pathname = usePathname();

  const navLinks = [
    { name: '‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°', href: '/student/activities' },
    { name: '‡∏Å‡∏≤‡∏£‡∏•‡∏á‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô‡∏Ç‡∏≠‡∏á‡∏â‡∏±‡∏ô', href: '/student/my-registrations' },
  ];

  if (isLoading || !liffProfile) {
    return (
      <header className="bg-primary p-4 shadow-md text-white animate-pulse">
        <div className="max-w-4xl mx-auto"><div className="h-28"></div></div>
      </header>
    );
  }

  const displayName = studentDbProfile?.fullName || liffProfile?.displayName;
  // üëá 2. ‡∏õ‡∏£‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏ó‡∏µ‡πà‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡πÇ‡∏õ‡∏£‡πÑ‡∏ü‡∏•‡πå
  const displaySubText = studentDbProfile?.studentId ? `ID: ${studentDbProfile.studentId}` : "‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡πÇ‡∏õ‡∏£‡πÑ‡∏ü‡∏•‡πå";

  return (
    <>
      {/* Modal ‡∏ñ‡∏π‡∏Å‡∏•‡∏ö‡∏≠‡∏≠‡∏Å‡πÑ‡∏õ‡∏à‡∏≤‡∏Å‡∏™‡πà‡∏ß‡∏ô‡∏ô‡∏µ‡πâ */}
      <header className="bg-primary p-4 shadow-md text-white sticky top-0 z-40 font-sans">
        <div className="max-w-4xl mx-auto">
          <div className="flex items-center gap-4 mb-4">
            <Image
                src={liffProfile?.pictureUrl}
                alt={displayName || 'Profile'}
                width={56}
                height={56}
                className="w-14 h-14 rounded-full border-2 border-white/80 bg-gray-400"
            />
            <div>
              <h1 className="font-bold text-lg">{displayName}</h1>
              <p className="text-xs text-white/80">{displaySubText}</p>
            </div>
          </div>

          {/* üëá 3. ‡∏õ‡∏∏‡πà‡∏°‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ñ‡∏π‡∏Å‡∏•‡∏ö‡∏≠‡∏≠‡∏Å */}

          <div className="flex justify-center bg-black/40 rounded-lg p-1">
            {navLinks.map((link) => {
              const isActive = pathname === link.href;
              return (
                <Link key={link.name} href={link.href} className={`w-1/2 text-center px-3 py-2 rounded-md text-sm font-medium transition-all duration-200 ${isActive ? 'bg-white text-blue-700 shadow' : 'text-white/80 hover:bg-white/10'}`}>
                  {link.name}
                </Link>
              );
            })}
          </div>
        </div>
      </header>
    </>
  );
}